---
import { getLangFromUrl, useTranslations, getLocalizedPath } from '../i18n/utils';

interface BreadcrumbItem {
  label: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<nav class="flex" aria-label="Breadcrumb">
  <ol class="inline-flex items-center space-x-1 md:space-x-3">
    <!-- Home breadcrumb -->
    <li class="inline-flex items-center">
      <a 
        href={getLocalizedPath('/', lang)} 
        class="inline-flex items-center text-sm font-medium text-slate-700 hover:text-blue-600 transition-colors"
      >
        <svg class="w-3 h-3 mr-2.5" fill="currentColor" viewBox="0 0 20 20">
          <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
        </svg>
        {t('nav.home')}
      </a>
    </li>
    
    <!-- Dynamic breadcrumb items -->
    {items.map((item, index) => (
      <li>
        <div class="flex items-center">
          <svg class="w-3 h-3 text-slate-400 mx-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 18 6-6-6-6"></path>
          </svg>
          {item.href ? (
            <a 
              href={item.href} 
              class="ml-1 text-sm font-medium text-slate-700 hover:text-blue-600 md:ml-2 transition-colors"
            >
              {item.label}
            </a>
          ) : (
            <span class="ml-1 text-sm font-medium text-slate-500 md:ml-2" aria-current="page">
              {item.label}
            </span>
          )}
        </div>
      </li>
    ))}
  </ol>
</nav>